---
- name: Check whether your OS is supported
  ansible.builtin.assert:
    that:
      - ansible_facts['architecture'] == 'x86_64'
      - ansible_facts['distribution'] | lower in mcconfig_supported_os
    fail_msg: Your OS is not supported

- name: Install mc
  ansible.builtin.apt:
    update_cache: "{{ mcconfig_apt_update }}"
    name:
      - mc
  when: mcconfig_install_mc

- name: Get information about home directory
  ansible.builtin.stat:
    path: "{{ item }}"
  register: directory_info
  loop: "{{ mcconfig_userdirs }}"

- name: Upload ini
  ansible.builtin.copy:
    src: ini
    dest: "{{ dirinfo.item }}/.config/mc/"
    owner: "{{ dirinfo.stat.pw_name }}"
    group: "{{ dirinfo.stat.gr_name }}"
    mode: "0640"
  loop: "{{ directory_info.results }}"
  loop_control:
    loop_var: dirinfo
    label: "{{ dirinfo.item }}"

- name: Upload panels.ini
  ansible.builtin.copy:
    src: panels.ini
    dest: "{{ dirinfo.item }}/.config/mc/"
    owner: "{{ dirinfo.stat.pw_name }}"
    group: "{{ dirinfo.stat.gr_name }}"
    mode: "0640"
  loop: "{{ directory_info.results }}"
  loop_control:
    loop_var: dirinfo
    label: "{{ dirinfo.item }}"

- name: Backup menu file
  ansible.builtin.copy:
    remote_src: true
    src: /etc/mc/mc.menu
    dest: "/etc/mc/mc.menu_{{ now(fmt='%y%m%d%H%M%S') }}"

- name: Create menu directory
  ansible.builtin.file:
    path: /etc/mc_menu.d
    state: directory
    mode: "0755"

- name: Upload systemd service
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/systemd/system"
    mode: "0644"
  loop: ["mc-menu.service", "mc-menu.path"]

- name: Restart mc_menu service
  ansible.builtin.systemd_service:
    daemon_reload: true
    enabled: true
    state: started
    name: "{{ item }}"
  loop: ["mc-menu.service", "mc-menu.path"]
